/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

//      (0)       1  	2 	3	4       5               6       7       8       9       10      (11)
//	(12)	13      14	15	16	17		18	19	20	21	22      (23)
//	(24)	25	26	27	28      29		30	31	32	33	34      (35)
//	                        36	37	38      	39	40      41
// 		>;

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RGUI>;
        };

        combo_lshift {
            timeout-ms = <50>;
            key-positions = <15 17>;
            bindings = <&kp LSHFT>;
        };

        combo_rshift {
            timeout-ms = <50>;
            key-positions = <19 21>;
            bindings = <&kp RSHFT>;
        };
    };

    behaviors {
        sp: sticky_press {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_PRESS";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&sl>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  NA |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | NA |
            // | NA  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | NA |
            // | NA  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | NA |
            //                   | GUI |LLyr |BSPC |   | SPC | RLyr | ALT |

            bindings = <
&kp N0  &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U  &kp I      &kp O    &kp P             &kp N0
&kp N0  &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J  &kp K      &kp L    &kp SINGLE_QUOTE  &kp N0
&kp N0  &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH          &kp N0
                      &kp LGUI  &mo 1  &kp BSPC    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1   &kp N2     &kp N3         &kp N4     &kp N5       &kp N6        &kp N7     &kp N8            &kp N9             &kp N0     &none
&none  &kp TAB  &kp LC(C)  &kp DQT        &kp PIPE2  &kp HASH     &kp PLUS      &kp LEFT   &kp DOWN          &kp UP             &kp RIGHT  &none
&none  &kp ESC  &kp TILDE  &kp BACKSLASH  &kp HASH   &kp TILDE    &kp KP_MINUS  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DEL    &none
                           &kp LGUI       &mo 1      &kp SPACE    &kp RET       &trans     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT        &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR       &none
&none  &kp HASH  &kp QUESTION  &kp SLASH         &kp COLON          &kp SEMI     &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BACKSPACE  &none
&none  &trans    &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSLH     &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE       &none
                               &kp LGUI          &mo 3              &kp SPACE    &kp RET    &mo 2      &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans    &trans  &trans  &trans  &out OUT_USB  &out OUT_USB  &trans
&trans  &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans  &trans        &trans        &trans
                                    &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
